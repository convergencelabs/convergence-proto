syntax = "proto3";

package io.convergence.proto;
import "scalapb/scalapb.proto";

message UserPresence {
  string username = 1;
  bool available = 2;
  map<string, string> state = 3;



  //////// ????????? Do I need clients



}

message PresenceRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.Request";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  repeated string usernames = 1;
}

message PresenceResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  repeated UserPresence userPresences = 1;
}

message SubscribePresenceRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.Request";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  repeated string usernames = 1;
}

message SubscribePresenceResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  repeated UserPresence userPresences = 1;
}

message UnsubscribePresenceMessage {
  option (scalapb.message).extends = "io.convergence.proto.Incoming";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  string usernames = 1;
}

message PresenceSetStateMessage {
  option (scalapb.message).extends = "io.convergence.proto.Incoming";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  map<string, string> state = 1;
}

message PresenceRemoveStateMessage {
  option (scalapb.message).extends = "io.convergence.proto.Incoming";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  repeated string keys = 1;
}

message PresenceClearStateMessage {
  option (scalapb.message).extends = "io.convergence.proto.Incoming";
  option (scalapb.message).extends = "io.convergence.proto.Presence";
}

message PresenceStateSetMessage {
  option (scalapb.message).extends = "io.convergence.proto.Outgoing";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  string username = 1;
  map<string, string> state = 2;
}

message PresenceStateRemovedMessage {
  option (scalapb.message).extends = "io.convergence.proto.Outgoing";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  string username = 1;
  repeated string keys = 2;
}

message PresenceStateClearedMessage {
  option (scalapb.message).extends = "io.convergence.proto.Outgoing";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  string username = 1;
}

message PresenceAvailabilityChangedMessage {
  option (scalapb.message).extends = "io.convergence.proto.Outgoing";
  option (scalapb.message).extends = "io.convergence.proto.Presence";

  string username = 1;
  bool available = 2;
}
