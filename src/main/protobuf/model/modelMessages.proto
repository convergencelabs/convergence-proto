/*
 * Copyright (C) Convergence Labs, Inc
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE.txt', which is part of this source code package.
 */
syntax = "proto3";

package com.convergencelabs.convergence.proto.model;

import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

import "scalapb/scalapb.proto";

import "model/modelDataValue.proto";
import "model/modelOperations.proto";
import "model/modelPermissions.proto";
import "model/modelAppliedOperations.proto";
import "model/modelReferences.proto";
import "core/identityData.proto";

//
// Open Close
//
message OpenRealtimeModelRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  google.protobuf.StringValue modelId = 1;
  google.protobuf.Int32Value autoCreateId = 2;
}

message OpenRealtimeModelResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  string modelId = 2;
  string collection = 3;
  string valueIdPrefix = 4;
  int64 version = 5;
  google.protobuf.Timestamp createdTime = 6;
  google.protobuf.Timestamp modifiedTime = 7;
  ObjectValue data = 8;
  repeated string connectedClients = 9;
  repeated ReferenceData references = 10;
  ModelPermissionsData permissions = 11;
}

message CloseRealtimeModelRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string resourceId = 1;
}

message CloseRealTimeModelResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";
}

message AutoCreateModelConfigRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  int32 autoCreateId = 1;
}

message AutoCreateModelConfigResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string collection = 1;
  ObjectValue data = 2;
  bool overridePermissions = 3;
  ModelPermissionsData worldPermissions = 4;
  repeated UserModelPermissionsData userPermissions = 5;
  bool ephemeral = 6;
}

message RemoteClientClosedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  string sessionId = 2;
}

message RemoteClientOpenedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  string sessionId = 2;
}

message ModelForceCloseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  string reason = 2;
  int32 reasonCode = 3;
}

//
// Create / Delete
//

message CreateRealtimeModelRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string collectionId = 1;
  google.protobuf.StringValue modelId = 2;
  ObjectValue data = 3;
  bool overrideWorldPermissions = 4;
  ModelPermissionsData worldPermissions = 5;
  repeated UserModelPermissionsData userPermissions = 6;
}

message CreateRealtimeModelResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string modelId = 1;
}

message DeleteRealtimeModelRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string modelId = 1;
}

message DeleteRealtimeModelResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";
}

//
// Model Resynchronization
//

message ModelResyncRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  // The id of the model to resync.
  string modelId = 1;

  // The current version that the client has locally.
  int64 contextVersion = 2;
}

message ModelResyncResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  // The resource id to use for further communication on this model.
  string resourceId = 1;

  // The servers current version of this model.
  int64 currentVersion = 2;

  // The client's current permissions for this model.
  ModelPermissionsData permissions = 3;
}

message ModelResyncCompleteRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  // The resource id of a model being resynchronized.
  string resourceId = 1;

  // Indicates if the client desires to open the model after the resync.
  bool open = 2;
}

message ModelResyncCompleteResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  // These will be empty if the client did not want to open the model.

  // The sessionIds of the clients that have this model open.
  repeated string connectedClients = 1;

  // Any references current shared for this model.
  repeated ReferenceData references = 2;
}

message RemoteClientResyncStartedMessage {
    option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
    option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
    option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

    // The resourceId of the model this message relates to.
    string resourceId = 1;

    // The session id of the remote client that started the resync
    string sessionId = 2;
}

message RemoteClientResyncCompletedMessage {
    option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
    option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
    option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

    // The resourceId of the model this message relates to.
    string resourceId = 1;

    // The session id of the remote client that completed the resync
    string sessionId = 2;
}

//
// Permissions
//

message GetModelPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string modelId = 1;
}

message GetModelPermissionsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  bool overridesCollection = 1;
  ModelPermissionsData worldPermissions = 2;
  repeated UserModelPermissionsData userPermissions = 3;
}

message SetModelPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string modelId = 1;
  google.protobuf.BoolValue overrideCollection = 2;
  ModelPermissionsData worldPermissions = 3;
  bool removeAllUserPermissionsBeforeSet = 4;
  repeated UserModelPermissionsData setUserPermissions = 5;
  repeated com.convergencelabs.convergence.proto.core.DomainUserIdData removedUserPermissions = 6;
}

message SetModelPermissionsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";
}

message ModelPermissionsChangedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  ModelPermissionsData permissions = 2;
}

//
// Query
//
message ModelsQueryRequestMessage  {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string query = 1;
}

message ModelsQueryResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  message ModelResult {
    string collectionId = 1;
    string modelId = 2;
    google.protobuf.Timestamp createdTime = 3;
    google.protobuf.Timestamp modifiedTime = 4;
    int64 version = 5;
    google.protobuf.Struct data = 6;
  }

  repeated ModelResult models = 1;
  int64 offset = 2;
  int64 totalResults = 3;
}


//
// Operations
//
message OperationSubmissionMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string resourceId = 1;
  int32 sequenceNumber = 2;
  int64 contextVersion = 3;
  OperationData operation = 4;
}

message OperationAcknowledgementMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  int32 sequenceNumber = 2;
  int64 version = 3;
  google.protobuf.Timestamp timestamp = 4;
}

message RemoteOperationMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  string sessionId = 2;
  int64 contextVersion = 3;
  google.protobuf.Timestamp timestamp = 4;
  OperationData operation = 5;
}

//
// References
//
message ShareReferenceMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
  ReferenceValues references = 4;
  int64 version = 5;
}

message RemoteReferenceSharedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
  ReferenceValues references = 4;
  string sessionId = 5;
}

message UnshareReferenceMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
}

message RemoteReferenceUnsharedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
  string sessionId = 4;
}

message SetReferenceMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
  ReferenceValues references = 4;
  int64 version = 5;
}

message RemoteReferenceSetMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
  ReferenceValues references = 4;
  string sessionId = 5;
}

message ClearReferenceMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
}

message RemoteReferenceClearedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string resourceId = 1;
  google.protobuf.StringValue valueId = 2;
  string key = 3;
  string sessionId = 4;
}

//
// Offline
//
message ModelOfflineSubscriptionChangeRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  message ModelOfflineSubscriptionData {
    string modelId = 1;
    int64 currentVersion = 2;
    ModelPermissionsData currentPermissions = 3;
  }

  repeated ModelOfflineSubscriptionData subscribe = 1;
  repeated string unsubscribe = 2;
  bool all = 3;
}

message OfflineModelUpdatedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ModelMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  message OfflineModelUpdateData {
    ModelUpdateData model = 1;
    ModelPermissionsData permissions = 2;
  }

  message ModelUpdateData {
    int64 version = 1;
    google.protobuf.Timestamp createdTime = 2;
    google.protobuf.Timestamp modifiedTime = 3;
    ObjectValue data = 4;
  }

  string modelId = 1;

  oneof action {
    bool deleted  = 2;
    bool permissionRevoked  = 3;
    OfflineModelUpdateData updated = 4;
  }
}


//
// Historical Models
//

message HistoricalDataRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.HistoricalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string modelId = 1;
}

message HistoricalDataResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.HistoricalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string collectionId  = 1;
  ObjectValue data = 2;
  int64 version = 3;
  google.protobuf.Timestamp createdTime = 4;
  google.protobuf.Timestamp modifiedTime = 5;
}

message HistoricalOperationRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.HistoricalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string modelId = 1;
  int64 first = 2;
  int64 last = 3;
}

message HistoricalOperationsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.HistoricalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  message ModelOperationData {
    string modelId = 1;
    int64 version = 2;
    google.protobuf.Timestamp timestamp = 3;
    string sessionId = 4;
    AppliedOperationData operation = 5;
  }

  repeated ModelOperationData operations = 1;
}
