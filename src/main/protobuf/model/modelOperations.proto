/*
 * Copyright (C) Convergence Labs, Inc
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE', which is part of this source code package.
 */
syntax = "proto3";

package com.convergencelabs.convergence.proto.model;

import "google/protobuf/timestamp.proto";
import "model/modelDataValue.proto";

message StringSpliceOperationData {
  string id = 1;
  bool noOp = 2;
  int32 index = 3;
  int32 deleteCount = 4;
  string insertedValue = 5;
}

message StringSetOperationData {
  string id = 1;
  bool noOp = 2;
  string value = 3;
}

message ArrayInsertOperationData {
  string id = 1;
  bool noOp = 2;
  int32 index = 3;
  DataValue value = 4;
}

message ArrayRemoveOperationData {
  string id = 1;
  bool noOp = 2;
  int32 index = 3;
}

message ArrayReplaceOperationData {
  string id = 1;
  bool noOp = 2;
  int32 index = 3;
  DataValue value = 4;
}

message ArrayMoveOperationData {
  string id = 1;
  bool noOp = 2;
  int32 fromIndex = 3;
  int32 toIndex = 4;
}

message ArraySetOperationData {
  string id = 1;
  bool noOp = 2;
  repeated DataValue values = 3;
}

message ObjectAddPropertyOperationData {
  string id = 1;
  bool noOp = 2;
  string key = 3;
  DataValue value = 4;
}

message ObjectSetPropertyOperationData {
  string id = 1;
  bool noOp = 2;
  string key = 3;
  DataValue value = 4;
}

message ObjectRemovePropertyOperationData {
  string id = 1;
  bool noOp = 2;
  string key = 3;
}

message ObjectSetOperationData {
  string id = 1;
  bool noOp = 2;
  map<string, DataValue> values = 3;
}

message NumberDeltaOperationData {
  string id = 1;
  bool noOp = 2;
  double delta = 3;
}

message NumberSetOperationData {
  string id = 1;
  bool noOp = 2;
  double value = 3;
}

message BooleanSetOperationData {
  string id = 1;
  bool noOp = 2;
  bool value = 3;
}

message DateSetOperationData {
  string id = 1;
  bool noOp = 2;
  google.protobuf.Timestamp value = 3;
}

message DiscreteOperationData {
  oneof operation {
    StringSpliceOperationData stringSpliceOperation = 1;
    StringSetOperationData stringSetOperation = 2;
    ArrayInsertOperationData arrayInsertOperation = 3;
    ArrayRemoveOperationData arrayRemoveOperation = 4;
    ArrayReplaceOperationData arrayReplaceOperation = 5;
    ArrayMoveOperationData arrayMoveOperation = 6;
    ArraySetOperationData arraySetOperation = 7;
    ObjectAddPropertyOperationData objectAddPropertyOperation = 8;
    ObjectSetPropertyOperationData objectSetPropertyOperation = 9;
    ObjectRemovePropertyOperationData objectRemovePropertyOperation = 10;
    ObjectSetOperationData objectSetOperation = 11;
    NumberDeltaOperationData numberDeltaOperation = 12;
    NumberSetOperationData numberSetOperation = 13;
    BooleanSetOperationData booleanSetOperation = 14;
    DateSetOperationData dateSetOperation = 15;
  }
}

message CompoundOperationData {
  repeated DiscreteOperationData operations = 1;
}

message OperationData {
  oneof operation {
    DiscreteOperationData discreteOperation = 1;
    CompoundOperationData compoundOperation = 2;
  }
}
