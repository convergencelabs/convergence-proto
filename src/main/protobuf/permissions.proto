syntax = "proto3";

package io.convergence.proto;
import "scalapb/scalapb.proto";
import "identity.proto";

enum PermissionType {
  PERMISSION_TYPE_NOT_SET = 0;
  CHAT = 1;
}

message UserPermissionsEntry {
  DomainUserIdData user = 1;
  repeated string permissions = 2;
}

message PermissionsList {
  repeated string values = 1;
}

message AddPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
  repeated string world = 3;
  repeated UserPermissionsEntry user = 4;
  map<string, PermissionsList> group = 5;
}

message AddPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";
}

message RemovePermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
  repeated string world = 3;
  repeated UserPermissionsEntry user = 4;
  map<string, PermissionsList> group = 5;
}

message RemovePermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";
}

message SetPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
  repeated string world = 3;
  repeated UserPermissionsEntry user = 4;
  map<string, PermissionsList> group = 5;
}

message SetPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";
}

message GetClientPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
}

message GetClientPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";

  repeated string permissions = 1;
}

message GetWorldPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
}

message GetWorldPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";

  repeated string permissions = 1;
}

message GetAllUserPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
}

message GetAllUserPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";

  repeated UserPermissionsEntry users = 1;
}

message GetAllGroupPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
}

message GetAllGroupPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";

  map<string, PermissionsList> groups = 1;
}

message GetUserPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
  DomainUserIdData user = 3;
}

message GetUserPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";

  repeated string permissions = 1;
}

message GetGroupPermissionsRequestMessage {
  option (scalapb.message).extends = "io.convergence.proto.PermissionRequest";

  PermissionType idType = 1;
  string id = 2;
  string groupId = 3;
}

message GetGroupPermissionsResponseMessage {
  option (scalapb.message).extends = "io.convergence.proto.Response";
  option (scalapb.message).extends = "io.convergence.proto.Permissions";

  repeated string permissions = 1;
}
