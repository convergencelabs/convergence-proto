/*
 * Copyright (C) Convergence Labs, Inc
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE', which is part of this source code package.
 */
syntax = "proto3";

package com.convergencelabs.convergence.proto.activity;

import "google/protobuf/struct.proto";

import "scalapb/scalapb.proto";

import "activity/activityData.proto";

message ActivityJoinRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string activityId = 1;
  map<string, google.protobuf.Value> state = 2;
}

message ActivityJoinResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  map<string, ActivityStateData> state = 1;
}

message ActivityLeaveRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";

  string activityId = 1;
}

message ActivityLeaveResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
}

message ActivityParticipantsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string activityId = 1;
}

message ActivityParticipantsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  map<string, ActivityStateData> state = 1;
}

message ActivitySessionJoinedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string activityId = 1;
  string sessionId = 2;
  map<string, google.protobuf.Value> state = 3;
}

message ActivitySessionLeftMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string activityId = 1;
  string sessionId = 2;
}

message ActivityUpdateStateMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string activityId = 1;
  map<string, google.protobuf.Value> set = 2;
  bool complete = 3;
  repeated string removed = 4;
}

message ActivityStateUpdatedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  string activityId = 1;
  string sessionId = 2;
  map<string, google.protobuf.Value> set = 3;
  bool complete = 4;
  repeated string removed = 5;
}
