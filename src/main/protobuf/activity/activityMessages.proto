/*
 * Copyright (C) Convergence Labs, Inc
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE', which is part of this source code package.
 */
syntax = "proto3";

package com.convergencelabs.convergence.proto.activity;

import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "scalapb/scalapb.proto";
import "activity/activityData.proto";
import "core/permissions.proto";

//
// Create Activity
//

message ActivityCreateRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string activityType = 1;
  string activityId = 2;

  repeated string worldPermissions = 3;
  repeated core.UserPermissionsEntry userPermissions = 4;
  map<string, core.PermissionsList> groupPermissions = 5;
}

// Response message will be OkResponse


//
// Delete Activity
//

message ActivityDeleteRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string activityType = 1;
  string activityId = 2;
}

// Response message will be OkResponse


//
// Get ActivityParticipants
//

message ActivityParticipantsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  string activityType = 1;
  string activityId = 2;
}

message ActivityParticipantsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  map<string, ActivityStateData> state = 1;
}


//
// Join Activity
//

message ActivityJoinRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  message AutoCreateData {
    bool ephemeral = 1;
    repeated string worldPermissions = 3;
    repeated core.UserPermissionsEntry userPermissions = 4;
    map<string, core.PermissionsList> groupPermissions = 5;
  }

  string activityType = 1;
  string activityId = 2;
  bool lurk = 3;
  map<string, google.protobuf.Value> state = 4;
  AutoCreateData autoCreateData = 5;
}

message ActivityJoinResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  int32 resourceId = 1;
  map<string, ActivityStateData> state = 2;
  bool ephemeral = 3;
  google.protobuf.Timestamp created = 5;
}

//
// Leave Activity
//
message ActivityLeaveRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.RequestMessage";

  int32 resourceId = 1;
}

// Response message will be OkResponse


//
// Update activity state
//

message ActivityUpdateStateMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  int32 resourceId = 1;
  map<string, google.protobuf.Value> set = 2;
  bool complete = 3;
  repeated string removed = 4;
}


//
// Messages from the server to the client about events occurring
// for a joined activity.
//

message ActivitySessionJoinedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  int32 resourceId = 1;
  string sessionId = 2;
  map<string, google.protobuf.Value> state = 3;
}

message ActivitySessionLeftMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  int32 resourceId = 1;
  string sessionId = 2;
}

message ActivityStateUpdatedMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.NormalMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ActivityMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  int32 resourceId = 1;
  string sessionId = 2;
  map<string, google.protobuf.Value> set = 3;
  bool complete = 4;
  repeated string removed = 5;
}
