/*
 * Copyright (C) Convergence Labs, Inc
 *
 * This file is subject to the terms and conditions defined in
 * file 'LICENSE', which is part of this source code package.
 */
syntax = "proto3";

package com.convergencelabs.convergence.proto.core;

import "scalapb/scalapb.proto";

import "core/identityData.proto";


message UserPermissionsEntry {
  DomainUserIdData user = 1;
  repeated string permissions = 2;
}

message PermissionsList {
  repeated string values = 1;
}

message PermissionTarget {
  message Chat {
    string id = 1;
  }

  message Activity {
    string type = 1;
    string id = 2;
  }

  oneof targetType {
    Chat chat = 1;
    Activity activity = 2;
  }
}

message AddPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
  repeated string world = 2;
  repeated UserPermissionsEntry user = 3;
  map<string, PermissionsList> group = 4;
}

// Response will be an OkResponse

message RemovePermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
  repeated string world = 2;
  repeated UserPermissionsEntry user = 3;
  map<string, PermissionsList> group = 4;
}

// Response will be an OkResponse

message SetPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  message SetWorld {
    repeated string permissions = 1;
  }


  message SetUser {
    repeated UserPermissionsEntry permissions = 1;
  }

  message SetGroup {
    map<string, PermissionsList> permissions = 1;
  }

  PermissionTarget target = 1;
  SetWorld world = 2;
  SetUser user = 3;
  SetGroup group = 4;
}

// Response will be an OkResponse

/**
 * Gets the permissions for the specified target for the connected client
 * that is sending the request.
 */
message ResolvePermissionsForConnectedSessionRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
}

message ResolvePermissionsForConnectedSessionResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionsMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  repeated string permissions = 1;
}


/**
 * Get the world permissions for the given target.
 */
message GetWorldPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
}

message GetWorldPermissionsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionsMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  repeated string permissions = 1;
}



message GetAllUserPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
}

message GetAllUserPermissionsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionsMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  repeated UserPermissionsEntry users = 1;
}

message GetAllGroupPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
}

message GetAllGroupPermissionsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionsMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  map<string, PermissionsList> groups = 1;
}

message GetUserPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
  DomainUserIdData user = 2;
}

message GetUserPermissionsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionsMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  repeated string permissions = 1;
}

message GetGroupPermissionsRequestMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionRequest";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ClientMessage";

  PermissionTarget target = 1;
  string groupId = 2;
}

message GetGroupPermissionsResponseMessage {
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ResponseMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.PermissionsMessage";
  option (scalapb.message).extends = "com.convergencelabs.convergence.proto.ServerMessage";

  repeated string permissions = 1;
}
